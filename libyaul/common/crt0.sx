/*
 * Copyright (c) 2012-2019
 * See LICENSE for details.
 *
 * Joe Fenton <jlfenton65@gmail.com>
 * Israel Jacquez <mrkotfw@gmail.com>
 */

.text
.align 1

.global _start
.type _start, @function

_start:
        mov #0xF0, r1
        mov.l .LC8, r15         ! Set stack pointer for master CPU
        ldc r1, sr              ! Disable interrupts
        mov.l .LC0, r2
        mov.l .LC1, r3          ! Start of clear 'BSS' section
        mov r3, r8
        mov #0x00, r5
        cmp/eq r2, r3
        bt .L2
.L1:
        mov.l r5, @-r3
        mov.l r5, @-r3
        mov.l r5, @-r3
        mov.l r5, @-r3
        cmp/eq r2, r3
        bf .L1
.L2:                            ! End of clear 'BSS' section
        mov.l .LC5, r7
        jsr @r7                 ! CTOR initializer
        nop
        mov.l .LC3, r7
        jsr @r7                 ! Initializer
        nop
        mov #0x00, r2           ! Enable interrupts
        ldc r2, sr
        mov.l .LC7, r3
        jsr @r3                 ! Jump to user
        nop
        mov #0xF0, r2           ! Disable interrupts
        ldc r2, sr
        mov.l .LC6, r1
        jsr @r1                 ! DTOR finalizer
        nop
        mov.l .LC4, r1
        jmp @r1                 ! Finalizer
        nop

.align 4

.LC0:
.long __bss_start

.LC1:
.long __bss_end

.LC3:
.long __INIT_SECTION__

.LC4:
.long __FINI_SECTION__

.LC5:
.long __CTOR_SECTION__

.LC6:
.long __DTOR_SECTION__

.LC7:
.long _main

.LC8:
.long __master_stack
